#!/bin/bash
set -e

# Config values
INSTANCE_TYPE=t2.micro
KEY_NAME=dev
PEM_FILE=~/.ssh/dev.pem
BOOT_FILE=~/.eztoo/startup.sh
AMI=ami-0ca285d4c2cda3300
SECURITY_GROUP_IDS=
SUBNET_ID=
RSYNC_EXCLUDES=node_modules

# Internal globals
INSTANCE_ID=''
PRIVATE_IP=''

start_instance() {
  INSTANCE_ID=`aws ec2 run-instances --instance-type $INSTANCE_TYPE --security-group-ids $SECURITY_GROUP_IDS --subnet-id $SUBNET_ID --key-name $KEY_NAME --user-data $BOOT_FILE --image-id $AMI --query 'Instances[0].InstanceId' --output text`
}

wait_for_instance() {
  READY="false"
  while [ $READY = "false" ]; do
    READY_RESULT=`aws ec2 describe-instance-status --instance-ids $INSTANCE_ID --query 'InstanceStatuses[0].InstanceState.Name' --output text`
    if [ $READY_RESULT = "running" ]; then
      READY="true"
    fi
    sleep 5
  done
}

ssh_setup() {
  PRIVATE_IP=`aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[0].Instances[0].PrivateIpAddress' --output text`
  ssh-keyscan -H $PRIVATE_IP >> ~/.ssh/known_hosts
}

rsync_dir() {
  rsync --exclude=$RSYNC_EXCLUDES -avz -e "ssh -i $PEM_FILE" ./*  ec2-user@$PRIVATE_IP:~/
}

ssh_to_instance() {
  ssh -i $PEM_FILE ec2-user@$PRIVATE_IP
}

terminate_instance() {
  aws ec2 terminate-instances --instance-ids $INSTANCE_ID
}

echo "Starting instance"
start_instance
echo "Waiting for 'ready' status"
wait_for_instance
ssh_setup
#rsync_dir
ssh_to_instance
terminate_instance
